{"version":3,"sources":["images/logo2.svg","components/Header.js","components/Filters.js","components/FilmCard.js","components/FilmList.js","components/FilmDetail.js","components/Loader.js","components/App.js","services/api.js","index.js"],"names":["module","exports","Header","className","src","logo2","alt","Filters","props","onSubmit","event","preventDefault","htmlFor","type","name","id","placeholder","value","valueText","onChange","searchFilm","target","trim","toLowerCase","handleSearch","checked","isSorted","handleSorted","ev","handleSelectDirector","selectDirector","FilmCard","filmItem","route","to","title","urlCover","FilmList","filterFilms","sort","a","b","localeCompare","map","key","FilmDetail","films","description","director","producer","release_date","rt_score","Fragment","Loader","speed","App","state","loading","bind","renderFilmsDetail","fetch","then","response","json","responseData","catch","e","alert","filmsData","undefined","setState","i","length","j","movies","url","this","search","filter","film","includes","routeId","match","params","find","item","console","log","exact","path","searchText","render","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c215155b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo2.d5bd44dd.svg\";","import React from 'react';\nimport logo2 from '../images/logo2.svg'\nimport '../stylesheets/header.scss'\n\nconst Header = () => {\n    return (\n        <header className='header'>\n            <img src={logo2} className='header__logo' alt='studio ghibli logo' />\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/filters.scss'\n\nfunction Filters(props) {\n\n    const handleSubmit = event => {\n        event.preventDefault();\n    };\n    const handleSearch = event => {\n        const searchFilm = event.target.value.trim().toLowerCase();\n        props.handleSearch(searchFilm);\n    };\n    const handleSorted = () => {\n        props.handleSorted();\n    };\n    const handleSelectDirector = ev => {\n        props.handleSelectDirector({\n            selectDirector: ev.target.value\n        });\n    };\n\n    return (\n        <form className=\"form\" onSubmit={handleSubmit}>\n            <div className='filter filter__film'>\n                <label htmlFor=\"searchFilm\" className=\"filter__film label\">Search for a film: </label>\n                <input\n                    className=\"filter__film input\"\n                    type=\"text\"\n                    name=\"searchFilm\"\n                    id=\"searchFilm\"\n                    placeholder=\"My neighbor Totoro\"\n                    value={props.valueText}\n                    onChange={handleSearch}\n                />\n            </div>\n            <div className='filter filter__sort'>\n                <label htmlFor=\"isSorted\" className='filter__sort label'>A to Z: </label>\n                <input\n                    className='filter__sort checkbox'\n                    name=\"isSorted\"\n                    type=\"checkbox\"\n                    checked={props.isSorted}\n                    onChange={handleSorted} />\n            </div>\n            <div className='filter filter__director'>\n                <label className='filter__director label'>Director: </label>\n                <select\n                    className='filter__director select'\n                    onChange={handleSelectDirector}\n                    value={props.selectDirector}>\n                    <option value=\"\"> All </option>\n                    <option value=\"Gorō Miyazaki\" >Gorō Miyazaki</option>\n                    <option value=\"Hayao Miyazaki\" >Hayao Miyazaki</option>\n                    <option value=\"Hiromasa Yonebayashi\" >Hiromasa Yonebayashi</option>\n                    <option value=\"Hiroyuki Morita\" >Hiroyuki Morita</option>\n                    <option value=\"Isao Takahata\" >Isao Takahata</option>\n                    <option value=\"Yoshifumi Kondō\" >Yoshifumi Kondō</option>\n                </select>\n            </div>\n\n        </form>\n    )\n}\n\nFilters.propTypes = {\n    handleSearch: PropTypes.func.isRequired\n};\n\nexport default Filters;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport '../stylesheets/filmCard.scss';\n\nfunction FilmCard(props) {\n    const { id } = props.filmItem;\n    const route = `/films/${id}`;\n\n    return (\n        <div className=\"card\">\n            <Link to={route}>\n                <h2 className=\"card__title\">{props.filmItem.title}</h2>\n                <div className=\"card__container\" >\n                    <img className=\"card__container--movie\" src={props.filmItem.urlCover} alt=\"movie cover\" />\n                </div>\n            </Link>\n        </div>\n    )\n}\n\nFilmCard.propTypes = {\n    filmsItem: PropTypes.shape({\n        title: PropTypes.string\n    })\n};\n\nexport default FilmCard;","import React from 'react';\nimport FilmCard from './FilmCard';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/filmList.scss'\n\nfunction FilmList(props) {\n    return (\n        <ul className=\"cards\">\n            {(props.isSorted === true)\n                ? props.filterFilms.sort((a, b) => a.title.localeCompare(b.title)).map(filmItem => (\n                    <li key={filmItem.id} className=\"list__item\">\n                        <FilmCard filmItem={filmItem} />\n                    </li>\n                ))\n                : props.filterFilms.map(filmItem => (\n                    <li key={filmItem.id} className=\"list__item\">\n                        <FilmCard filmItem={filmItem} />\n                    </li>\n                ))}\n        </ul>\n    )\n}\n\nFilmList.propTypes = {\n    filterFilms: PropTypes.array.isRequired,\n    isSorted: PropTypes.bool\n};\n\nexport default FilmList;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/filmDetail.scss'\n\nconst FilmDetail = (props) => {\n    const { title, description, director, producer, release_date, rt_score, urlCover } = props.films;\n    return (\n        <React.Fragment>\n            <div className=\"card--detail container\">\n                <div className=\"card__detail\">\n                    <Link to='/'>\n                        <button className=\" card__detail--button\">  BACK </button>\n                    </Link>\n                    <h3 className=\"card__detail--title\">{title}</h3>\n                    <li className=\"card__detail--text title\">Directed by <span className=\"strong\">{director}</span></li>\n                    <div>\n                        <img className=\"card__detail--image\" src={urlCover} alt={title} />\n                    </div>\n                    <p className=\"card__detail--description\">{description}</p>\n                    <ul>\n                        <li className=\"card__detail--text\">Producer: <span className=\"strong\">{producer}</span></li>\n                        <li className=\"card__detail--text\">Year of production: <span className=\"strong\">{release_date}</span></li>\n                        <li className=\"card__detail--text\">Score: <span className=\"strong\">{rt_score}</span></li>\n                    </ul>\n                </div >\n            </div>\n        </React.Fragment>\n    )\n}\n\nFilmDetail.propTypes = {\n    title: PropTypes.string,\n    description: PropTypes.string,\n    director: PropTypes.string,\n    producer: PropTypes.string,\n    release_date: PropTypes.string,\n    rt_score: PropTypes.string,\n};\n\nexport default FilmDetail;","import React from 'react';\n// import '../stylesheets/header.scss'\nimport { CircleLoading } from '../../node_modules/react-loadingg'\n\nconst Loader = ({ speed = -20 }) => {\n    return (\n        <CircleLoading speed={speed} />\n\n    );\n}\n\nexport default Loader;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { dataFilms } from '../services/api';\nimport Header from './Header';\nimport Filters from './Filters';\nimport FilmList from './FilmList';\nimport FilmDetail from './FilmDetail';\nimport Loader from './Loader';\nimport movies from '../data/movies.json';\nimport '../stylesheets/app.scss';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      films: [],\n      searchFilm: '',\n      isSorted: false,\n      selectDirector: '',\n      loading: true\n    };\n    this.handleSearch = this.handleSearch.bind(this);\n    this.filterFilms = this.filterFilms.bind(this);\n    this.renderFilmsDetail = this.renderFilmsDetail.bind(this);\n    this.handleSorted = this.handleSorted.bind(this);\n    this.handleSelectDirector = this.handleSelectDirector.bind(this);\n  }\n\n  //API call & Cover of movies added\n\n  componentDidMount() {\n    dataFilms().then(filmsData => {\n      if (filmsData === undefined) {\n        return this.setState({ loading: true });\n      }\n      else {\n        for (let i = 0; i < filmsData.length; i++) {\n          for (let j = 0; j < movies.length; j++) {\n            if (filmsData[i].title === movies[j].name) {\n              filmsData[i].urlCover = movies[j].url\n            }\n          }\n        }\n        return this.setState({ films: filmsData, loading: false });\n      }\n    });\n  }\n\n  //Search events\n\n  handleSearch(searchFilm) {\n    this.setState({ searchFilm });\n  }\n\n  //Sorted List\n  handleSorted() {\n    (this.state.isSorted === false)\n      ? this.setState({ isSorted: true })\n      : this.setState({ isSorted: false })\n  }\n\n  //Filter of directors\n  handleSelectDirector(selectDirector) {\n    this.setState(selectDirector)\n  }\n\n  //Filter of films\n  filterFilms() {\n    const films = this.state.films;\n    const director = this.state.selectDirector;\n    const search = this.state.searchFilm;\n\n    return films\n      .filter(film => {\n        return film.title.trim().toLowerCase().includes(search);\n      })\n      .filter(films => {\n        return (director === '') ? true : films.director === director\n      })\n\n  }\n\n  //Render of FilmCard with details\n\n  renderFilmsDetail(props) {\n    const routeId = props.match.params.id;\n    const films = this.state.films.find(item => {\n      return item.id === routeId\n    });\n    if (!films) {\n      return (<p>Ups...the film you are looking for doesn't exist</p>);\n    }\n    else {\n      return < FilmDetail films={films} />\n    }\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"App\" >\n        {this.state.loading\n          ? (<Loader />)\n          : (<>\n            < Header />\n            <Switch>\n              <Route exact path='/'>\n                <header />\n                <div className=\"App__background\">\n                  <Filters\n                    handleSearch={this.handleSearch}\n                    valueText={this.state.searchText}\n                    handleSorted={this.handleSorted}\n                    isSorted={this.state.isSorted}\n                    handleSelectDirector={this.handleSelectDirector}\n                    selectDirector={this.selectDirector} />\n                  <FilmList\n                    filterFilms={this.filterFilms()}\n                    isSorted={this.state.isSorted} />\n                </div>\n              </Route>\n              <Route path='/films/:id' render={this.renderFilmsDetail} />\n            </Switch>\n          </>)}\n      </div >\n    );\n  }\n}\n\nexport default App;\n","const ENDPOINT = 'https://ghibliapi.herokuapp.com/films';\n\nconst dataFilms = () => fetch(ENDPOINT)\n    .then(response => response.json())\n    .then(responseData => responseData)\n    .catch(e => alert(`Se ha detectado un error: ${e}`))\n\nexport { dataFilms };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n);"],"sourceRoot":""}